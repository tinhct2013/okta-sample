<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Okta.Auth.Sdk</name>
    </assembly>
    <members>
        <member name="T:Okta.Auth.Sdk.ActivateFactorOptions">
            <summary>
            This class contains all the request parameters for performing an activate request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.ActivatePushFactorOptions">
            <summary>
            This class contains all the request parameters for performing an activate push factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivatePushFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivatePushFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.ActivateU2fFactorOptions">
            <summary>
            This class contains all the request parameters for performing an activate U2F factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateU2fFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateU2fFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateU2fFactorOptions.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateU2fFactorOptions.RegistrationData">
            <summary>
            Gets or sets the registration data
            </summary>
            <value>The registration data</value>
        </member>
        <member name="T:Okta.Auth.Sdk.ActivateWebAuthnFactorOptions">
            <summary>
            This class contains all the request parameters for performing an activate WebAuthn factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateWebAuthnFactorOptions.Attestation">
            <summary>
            Gets or sets the attestation data
            </summary>
            <value>The attestation data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateWebAuthnFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateWebAuthnFactorOptions.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ActivateWebAuthnFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.AnswerRecoveryQuestionOptions">
            <summary>
            This class contains all the request parameters for answering a recovery question request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.AnswerRecoveryQuestionOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AnswerRecoveryQuestionOptions.Answer">
            <summary>
            Gets or sets the answer
            </summary>
            <value>The answer</value>
        </member>
        <member name="T:Okta.Auth.Sdk.AuthenticateOptions">
            <summary>
            This class contains all the request parameters for performing a primary authentication request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.Username">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.Password">
            <summary>
            Gets or sets the password
            </summary>
            <value>The password</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.Audience">
            <summary>
            Gets or sets the audience
            </summary>
            <value>The audience</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.MultiOptionalFactorEnroll">
            <summary>
            Gets or sets the multiOptionalFactorEnroll flag
            </summary>
            <remarks><see href="https://developer.okta.com/docs/api/resources/authn#options-object"/></remarks>
            <value>The multiOptionalFactorEnroll flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.WarnBeforePasswordExpired">
            <summary>
            Gets or sets the warnBeforePasswordExpired flag
            </summary>
            <remarks><see href="https://developer.okta.com/docs/api/resources/authn#options-object"/></remarks>
            <value>The warnBeforePasswordExpired flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.DeviceToken">
            <summary>
            Gets or sets the device token
            </summary>
            <value>The device token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.DeviceFingerprint">
            <summary>
            Gets or sets the device fingerprint
            </summary>
            <value>The device fingerprint</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.XForwardedFor">
            <summary>
            Gets or sets the value for `x-forwarded-for` header.
            </summary>
            <value>The value for `x-forwarded-for` header.</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions">
            <summary>
            This class contains all the request parameters for performing a primary authentication request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions.ActivationToken">
            <summary>
            Gets or sets the activation token
            </summary>
            <value>The activation token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions.XForwardedFor">
            <summary>
            Gets or sets the value for `x-forwarded-for` header.
            </summary>
            <value>The value for `x-forwarded-for` header.</value>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="T:Okta.Auth.Sdk.AuthenticationClient">
            <summary>
            This class represents the authentication client
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.#ctor(Okta.Sdk.Abstractions.Configuration.OktaClientConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.AuthenticationClient"/> class using the specified <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="apiClientConfiguration">
            The client configuration. If <c>null</c>, the library will attempt to load
            configuration from an <c>okta.yaml</c> file or environment variables.
            </param>
            <param name="httpClient">The HTTP client to use for requests to the Okta API.</param>
            <param name="logger">The logging interface to use, if any.</param>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.#ctor(Okta.Sdk.Abstractions.IDataStore,Okta.Sdk.Abstractions.Configuration.OktaClientConfiguration,Okta.Sdk.Abstractions.RequestContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.AuthenticationClient"/> class.
            </summary>
            <param name="dataStore">The <see cref="T:Okta.Sdk.Abstractions.IDataStore">DataStore</see> to use.</param>
            <param name="configuration">The client configuration.</param>
            <param name="requestContext">The request context, if any.</param>
            <remarks>This overload is used internally to create cheap copies of an existing client.</remarks>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.AuthenticateAsync(Okta.Auth.Sdk.AuthenticateOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.AuthenticateAsync(Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ChangePasswordAsync(Okta.Auth.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ForgotPasswordAsync(Okta.Auth.Sdk.ForgotPasswordOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ResetPasswordAsync(Okta.Auth.Sdk.ResetPasswordOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSmsFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ResendSmsEnrollFactorAsync(Okta.Auth.Sdk.EnrollSmsFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollCallFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ResendCallEnrollFactorAsync(Okta.Auth.Sdk.EnrollCallFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollPushFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollRsaFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSymantecFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollYubiKeyFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollDuoFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollU2FFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollTotpFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivatePushFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateU2fFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.AnswerRecoveryQuestionAsync(Okta.Auth.Sdk.AnswerRecoveryQuestionOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyRecoveryTokenAsync(Okta.Auth.Sdk.VerifyRecoveryTokenOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyRecoveryFactorAsync(Okta.Auth.Sdk.VerifyRecoveryFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ResendRecoveryChallengeAsync(Okta.Auth.Sdk.ResendRecoveryChallengeOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.UnlockAccountAsync(Okta.Auth.Sdk.UnlockAccountOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.GetTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.GetPreviousTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.SkipTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.CancelTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyU2FFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyDuoFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyCallFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyPushFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyTotpFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifySmsFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationClient.ResendVerifyChallengeAsync(Okta.Auth.Sdk.ResendChallengeOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Okta.Auth.Sdk.AuthenticationResponse">
            <summary>
            This class represents the authentication response
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.StateToken">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.RelayState">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.SessionToken">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.ExpiresAt">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.AuthenticationStatus">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.Embedded">
            <inheritdoc/>
        </member>
        <member name="P:Okta.Auth.Sdk.AuthenticationResponse.Links">
            <inheritdoc/>
        </member>
        <member name="T:Okta.Auth.Sdk.AuthenticationStatus">
            <summary>
            This class represents the possible authentication response statuses
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.AuthenticationStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.AuthenticationStatus"/> class.
            </summary>
            <param name="value">The status value</param>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.Unauthenticated">
            <summary>
            Unauthenticated
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.PasswordExpired">
            <summary>
            Password expired
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.PasswordWarn">
            <summary>
            Password warning
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.PasswordReset">
            <summary>
            Password reset
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.LockedOut">
            <summary>
            Locked out
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.MfaRequired">
            <summary>
            MFA required
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.MfaEnroll">
            <summary>
            MFA enroll
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.MfaEnrollActivate">
            <summary>
            MFA enroll activate
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.MfaChallenge">
            <summary>
            MFA challenge
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.RecoveryChallenge">
            <summary>
            Recovery challenge
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.AuthenticationStatus.Recovery">
            <summary>
            Recovery
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.ChangePasswordOptions">
            <summary>
            This class contains all the request parameters for performing a change password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ChangePasswordOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ChangePasswordOptions.OldPassword">
            <summary>
            Gets or sets the old password
            </summary>
            <value>The old password</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ChangePasswordOptions.NewPassword">
            <summary>
            Gets or sets the new password
            </summary>
            <value>The new password</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollCallFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll call factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollCallFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollCallFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollCallFactorOptions.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
            <value>The phone number</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollCallFactorOptions.PhoneExtension">
            <summary>
            Gets or sets the phone extension
            </summary>
            <value>The phone extension</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollCallFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollDuoFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll duo factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollDuoFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollDuoFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollPushFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll push factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollPushFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollPushFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollRsaFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll RSA factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollRsaFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollRsaFactorOptions.CredentialId">
            <summary>
            Gets or sets the credential id
            </summary>
            <value>The credential id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollRsaFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollRsaFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll security question factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions.Question">
            <summary>
            Gets or sets the question
            </summary>
            <value>The question</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions.QuestionText">
            <summary>
            Gets or sets the question text
            </summary>
            <value>The question text</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions.Answer">
            <summary>
            Gets or sets the answer
            </summary>
            <value>The answer</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollSmsFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll SMS factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSmsFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSmsFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSmsFactorOptions.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
            <value>The phone number</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSmsFactorOptions.PhoneExtension">
            <summary>
            Gets or sets the phone extension
            </summary>
            <value>The phone extension</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSmsFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            /// <value>The factor id</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollSymantecFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll Symantec factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSymantecFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSymantecFactorOptions.CredentialId">
            <summary>
            Gets or sets the credential id
            </summary>
            <value>The credential id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSymantecFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSymantecFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollSymantecFactorOptions.NextPassCode">
            <summary>
            Gets or sets the next pass code
            </summary>
            <value>The next pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollTotpFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll TOTP factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollTotpFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollTotpFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollU2FFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll U2F factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollU2FFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollU2FFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollWebAuthnFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll WebAuthn factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollWebAuthnFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollWebAuthnFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="T:Okta.Auth.Sdk.EnrollYubiKeyFactorOptions">
            <summary>
            This class contains all the request parameters for performing an enroll Yubikey factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollYubiKeyFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollYubiKeyFactorOptions.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.EnrollYubiKeyFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Factor">
            <summary>
            This class represents a factor
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Id">
            <summary>
            Gets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Type">
            <summary>
            Gets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Provider">
            <summary>
            Gets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.VendorName">
            <summary>
            Gets the vendor name
            </summary>
            <value>The vendor name</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Status">
            <summary>
            Gets the status
            </summary>
            <value>The status</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Enrollment">
            <summary>
            Gets the enrollment
            </summary>
            <value>The enrollment</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Embedded">
            <summary>
            Gets the embedded
            </summary>
            <value>The embedded</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Links">
            <summary>
            Gets the links
            </summary>
            <value>The links</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Factor.Profile">
            <summary>
            Gets the profile
            </summary>
            <value>The profile</value>
        </member>
        <member name="T:Okta.Auth.Sdk.FactorResult">
            <summary>
            This class represents the possible factor result statuses
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.FactorResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.FactorResult"/> class.
            </summary>
            <param name="value">The factor result value</param>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.Waiting">
            <summary>
            Waiting
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.TimeOut">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.TimeWindowExceeded">
            <summary>
            Time window exceeded
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.PassCodeReplayed">
            <summary>
            Pass code replayed
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorResult.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.FactorStatus">
            <summary>
            This class represents the possible factor statuses
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.FactorStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.FactorStatus"/> class.
            </summary>
            <param name="value">The factor status value</param>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.NoSetup">
            <summary>
            No setup
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.PendingActivation">
            <summary>
            Pending activation
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.Enrolled">
            <summary>
            Enrolled
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.Inactive">
            <summary>
            Inactive
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.FactorType">
            <summary>
            This class represents the possible factor types
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.FactorType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.FactorType"/> class.
            </summary>
            <param name="value">The factor type value</param>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Sms">
            <summary>
            SMS
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Call">
            <summary>
            Call
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Push">
            <summary>
            Push
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.TokenHardware">
            <summary>
            token:hardware
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.TokenSoftware">
            <summary>
            token:software
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.TokenSoftwareTotp">
            <summary>
            token:software:totp
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.U2f">
            <summary>
            U2F
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.FactorType.WebAuthn">
            <summary>
            WebAuthn
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.ForgotPasswordOptions">
            <summary>
            This class contains all the request parameters for performing an forgot password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ForgotPasswordOptions.UserName">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ForgotPasswordOptions.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ForgotPasswordOptions.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ForgotPasswordOptions.XForwardedFor">
            <summary>
            Gets or sets the value for `x-forwarded-for` header.
            </summary>
            <value>The value for `x-forwarded-for` header.</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ForgotPasswordOptions.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="T:Okta.Auth.Sdk.IAuthenticationClient">
            <summary>
            Interface for authentication clients
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.AuthenticateAsync(Okta.Auth.Sdk.AuthenticateOptions,System.Threading.CancellationToken)">
            <summary>
            Authenticates a user with username/password credentials
            <see href="https://developer.okta.com/docs/api/resources/authn#primary-authentication"/>
            </summary>
            <param name="authenticateOptions">The authentication options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.AuthenticateAsync(Okta.Auth.Sdk.AuthenticateWithActivationTokenOptions,System.Threading.CancellationToken)">
            <summary>
            Authenticates a user with activation token
            <see href="https://developer.okta.com/docs/api/resources/authn#primary-authentication-with-activation-token"/>
            </summary>
            <param name="authenticateOptions">The authentication options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ChangePasswordAsync(Okta.Auth.Sdk.ChangePasswordOptions,System.Threading.CancellationToken)">
            <summary>
            Changes the user password
            <see href="https://developer.okta.com/docs/api/resources/authn#change-password"/>
            </summary>
            <param name="passwordOptions">The Change Password options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ForgotPasswordAsync(Okta.Auth.Sdk.ForgotPasswordOptions,System.Threading.CancellationToken)">
            <summary>
            Starts a new password recovery transaction for a given user and issues a recovery token that can be used to reset a user’s password.
            <see href="https://developer.okta.com/docs/api/resources/authn#forgot-password"/>
            </summary>
            <param name="forgotPasswordOptions">The forgot password options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ResetPasswordAsync(Okta.Auth.Sdk.ResetPasswordOptions,System.Threading.CancellationToken)">
            <summary>
            Resets user password
            <see href="https://developer.okta.com/docs/api/resources/authn#reset-password"/>
            </summary>
            <param name="resetPasswordOptions">The reset password options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSmsFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a SMS factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-okta-sms-factor"/>
            </summary>
            <param name="factorOptions">The enroll SMS factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ResendSmsEnrollFactorAsync(Okta.Auth.Sdk.EnrollSmsFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Resend a SMS challenge.
            <see href="https://developer.okta.com/docs/api/resources/authn#resend-sms-as-part-of-enrollment"/>
            </summary>
            <param name="factorOptions">The enroll SMS factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSecurityQuestionFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a security question factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-okta-security-question-factor"/>
            </summary>
            <param name="factorOptions">The enroll security question factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollCallFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a call factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-okta-call-factor"/>
            </summary>
            <param name="factorOptions">The enroll call factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ResendCallEnrollFactorAsync(Okta.Auth.Sdk.EnrollCallFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Resend a Call challenge.
            <see href="https://developer.okta.com/docs/api/resources/authn#request-example-for-resend-voice-call"/>
            </summary>
            <param name="factorOptions">The enroll call factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollPushFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a push factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-okta-verify-push-factor"/>
            </summary>
            <param name="factorOptions">The enroll push factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollRsaFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a RSA factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-rsa-securid-factor"/>
            </summary>
            <param name="factorOptions">The enroll RSA factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollSymantecFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a Symantec factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-symantec-vip-factor"/>
            </summary>
            <param name="factorOptions">The enroll Symantec factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollYubiKeyFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a YubiKey factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-yubikey-factor"/>
            </summary>
            <param name="factorOptions">The enroll YubiKey factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollDuoFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a Duo factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-duo-factor"/>
            </summary>
            <param name="factorOptions">The enroll Duo factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollU2FFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a U2F factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-u2f-factor"/>
            </summary>
            <param name="factorOptions">The enroll U2F factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollTotpFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a TOTP factor
            <see href="https://developer.okta.com/docs/api/resources/authn#enroll-okta-verify-totp-factor"/>
            </summary>
            <param name="factorOptions">The enroll TOTP factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.EnrollFactorAsync(Okta.Auth.Sdk.EnrollWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Enrolls a user with a WebAuthn factor
            <see href="https://developer.okta.com/docs/api/resources/authn/#enroll-webauthn-factor"/>
            </summary>
            <param name="factorOptions">The enroll U2F factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Activates a factor
            <see href="https://developer.okta.com/docs/api/resources/authn#activate-factor"/>
            </summary>
            <param name="activateFactorOptions">The activate factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivatePushFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Activates a push factor
            <see href="https://developer.okta.com/docs/api/resources/authn#activate-push-factor"/>
            </summary>
            <param name="activatePushFactorOptions">The activate push factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateU2fFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Activates a U2F factor
            <see href="https://developer.okta.com/docs/api/resources/authn#activate-u2f-factor"/>
            </summary>
            <param name="activateFactorOptions">The activate U2F factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ActivateFactorAsync(Okta.Auth.Sdk.ActivateWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Activates a WebAuthn factor
            <see href="https://developer.okta.com/docs/api/resources/authn#activate-webauthn-factor"/>
            </summary>
            <param name="activateFactorOptions">The activate WebAuthn factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.AnswerRecoveryQuestionAsync(Okta.Auth.Sdk.AnswerRecoveryQuestionOptions,System.Threading.CancellationToken)">
            <summary>
            Answers the user’s recovery question
            <see href="https://developer.okta.com/docs/api/resources/authn#answer-recovery-question"/>
            </summary>
            <param name="answerOptions">The answer recovery question options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyRecoveryTokenAsync(Okta.Auth.Sdk.VerifyRecoveryTokenOptions,System.Threading.CancellationToken)">
            <summary>
            Validates a recovery token that was distributed to the end user to continue the recovery transaction.
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-recovery-token"/>
            </summary>
            <param name="verifyRecoveryTokenOptions">The verify recovery token options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyRecoveryFactorAsync(Okta.Auth.Sdk.VerifyRecoveryFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies Recovery for a factor (SMS/Call).
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-recovery-factor"/>
            </summary>
            <param name="verifyFactorRecoveryOptions">The verify recovery factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyWebAuthnFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies Recovery for a factor (WebAuthn).
            <see href="https://developer.okta.com/docs/reference/api/authn/#verify-webauthn-factor"/>
            </summary>
            <param name="verifyWebAuthnFactorOptions">The verify recovery factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ResendRecoveryChallengeAsync(Okta.Auth.Sdk.ResendRecoveryChallengeOptions,System.Threading.CancellationToken)">
            <summary>
            Resend a recovery challenge for a factor (SMS/Call)
            <see href="https://developer.okta.com/docs/api/resources/authn#resend-sms-recovery-challenge"/>
            <seealso href="https://developer.okta.com/docs/api/resources/authn#resend-call-recovery-challenge"/>
            </summary>
            <param name="resendRecoveryChallengeOptions">The resend recovery challenge options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.UnlockAccountAsync(Okta.Auth.Sdk.UnlockAccountOptions,System.Threading.CancellationToken)">
            <summary>
            Unlocks an account <see href="https://developer.okta.com/docs/api/resources/authn#unlock-account"/>
            </summary>
            <param name="unlockAccountOptions">The unlock account options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.GetTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current transaction state for a state token.
            <see href="https://developer.okta.com/docs/api/resources/authn#get-transaction-state"/>
            </summary>
            <param name="transactionStateOptions">The transaction state options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.GetPreviousTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <summary>
            Moves the current transaction state back to the previous state.
            <see href="https://developer.okta.com/docs/api/resources/authn#previous-transaction-state"/>
            </summary>
            <param name="transactionStateOptions">The transaction state options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.SkipTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a skip link to skip the current transaction state and advance to the next state.
            <see href="https://developer.okta.com/docs/api/resources/authn#skip-transaction-state"/>
            </summary>
            <param name="transactionStateOptions">The transaction state options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.CancelTransactionStateAsync(Okta.Auth.Sdk.TransactionStateOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels the current transaction and revokes the state token.
            <see href="https://developer.okta.com/docs/api/resources/authn#cancel-transaction"/>
            </summary>
            <param name="transactionStateOptions">The transaction state options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyU2FFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a U2F factor
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-u2f-factor"/>
            </summary>
            <param name="verifyU2FFactorOptions">The verify U2F factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyDuoFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a Duo factor
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-duo-factor"/>
            </summary>
            <param name="verifyDuoFactorOptions">The verify Duo factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyCallFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a call factor
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-call-factor"/>
            </summary>
            <param name="verifyCallFactorOptions">The verify call factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyPushFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a push factor
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-push-factor"/>
            </summary>
            <param name="verifyPushFactorOptions">The verify push factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifyTotpFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a TOTP factor
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-totp-factor"/>
            </summary>
            <param name="verifyTotpFactorOptions">The verify TOTP factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifySmsFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies a sms factor.
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-sms-factor"/>
            </summary>
            <param name="verifySmsFactorOptions">The verify SMS factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.VerifyFactorAsync(Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies an answer to a question factor.
            <see href="https://developer.okta.com/docs/api/resources/authn#verify-security-question-factor"/>
            </summary>
            <param name="verifySecurityQuestionFactorOptions">The verify security question factor options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="M:Okta.Auth.Sdk.IAuthenticationClient.ResendVerifyChallengeAsync(Okta.Auth.Sdk.ResendChallengeOptions,System.Threading.CancellationToken)">
            <summary>
            Resend a verify challenge
            </summary>
            <param name="resendChallengeOptions">The resend challenge options</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The <see cref="T:Okta.Auth.Sdk.IAuthenticationResponse"/> response</returns>
        </member>
        <member name="T:Okta.Auth.Sdk.IAuthenticationResponse">
            <summary>
            Interface for authentication responses
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.StateToken">
            <summary>
            Gets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.SessionToken">
            <summary>
            Gets the session token
            </summary>
            <value>The session token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.RelayState">
            <summary>
            Gets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.ExpiresAt">
            <summary>
            Gets the expires at
            </summary>
            <value>The expires at</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.AuthenticationStatus">
            <summary>
            Gets the authentication status
            </summary>
            <value>The authenitcation status</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.Embedded">
            <summary>
            Gets the embedded
            </summary>
            <value>The embedded</value>
        </member>
        <member name="P:Okta.Auth.Sdk.IAuthenticationResponse.Links">
            <summary>
            Gets the links
            </summary>
            <value>The links</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ActivateFactorRequest">
            <summary>
            This class represents the body of the activate factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ActivateU2FFactorRequest">
            <summary>
            This class represents the body of the activate U2F factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateU2FFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateU2FFactorRequest.RegistrationData">
            <summary>
            Gets or sets the registration data
            </summary>
            <value>The registration data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateU2FFactorRequest.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ActivateWebAuthnFactorRequest">
            <summary>
            This class represents the body of the activate WebAuthn factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateWebAuthnFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateWebAuthnFactorRequest.Attestation">
            <summary>
            Gets or sets the attestation data
            </summary>
            <value>The registration data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ActivateWebAuthnFactorRequest.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.AnswerRecoveryQuestionRequest">
            <summary>
            This class represents the body of the answer recovery question request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AnswerRecoveryQuestionRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AnswerRecoveryQuestionRequest.Answer">
            <summary>
            Gets or sets the answer
            </summary>
            <value>The answer</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.AuthenticationRequest">
            <summary>
            This class represents the body of the authentication request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.Username">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.Password">
            <summary>
            Gets or sets the password
            </summary>
            <value>The password</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.Audience">
            <summary>
            Gets or sets the audience
            </summary>
            <value>The audience</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.ActivationToken">
            <summary>
            Gets or sets the activation token
            </summary>
            <value>The activation token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.Options">
            <summary>
            Gets or sets the authentication options
            </summary>
            <value>The authentication options</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequest.Context">
            <summary>
            Gets or sets the context
            </summary>
            <value>The context</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.AuthenticationRequestContext">
            <summary>
            This class represents the context of the authentication request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequestContext.DeviceToken">
            <summary>
            Gets or sets the device token
            </summary>
            <value>The device token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.AuthenticationRequestOptions">
            <summary>
            This class represents the options of the authentication request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequestOptions.MultiOptionalFactorEnroll">
            <summary>
            Gets or sets the multiOptionalFactorEnroll flag
            </summary>
            <remarks><see href="https://developer.okta.com/docs/api/resources/authn#options-object"/></remarks>
            <value>The multiOptionalFactorEnroll flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.AuthenticationRequestOptions.WarnBeforePasswordExpired">
            <summary>
            Gets or sets the warnBeforePasswordExpired flag
            </summary>
            <remarks><see href="https://developer.okta.com/docs/api/resources/authn#options-object"/></remarks>
            <value>The warnBeforePasswordExpired flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ChangePasswordRequest">
            <summary>
            This class represents the body of the change password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ChangePasswordRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ChangePasswordRequest.OldPassword">
            <summary>
            Gets or sets the old password
            </summary>
            <value>The old password</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ChangePasswordRequest.NewPassword">
            <summary>
            Gets or sets the new password
            </summary>
            <value>The new password</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.EnrollFactorRequest">
            <summary>
            This class represents the body of the enroll factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.Provider">
            <summary>
            Gets or sets the provider
            </summary>
            <value>The provider</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.NextPassCode">
            <summary>
            Gets or sets the next pass code
            </summary>
            <value>The next pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.EnrollFactorRequest.Profile">
            <summary>
            Gets or sets the profile
            </summary>
            <value>The profile</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ForgotPasswordRequest">
            <summary>
            This class represents the body of the forgot password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ForgotPasswordRequest.Username">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ForgotPasswordRequest.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ForgotPasswordRequest.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ResendChallengeRequest">
            <summary>
            This class represents the body of the resend challenge request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ResendChallengeRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ResendRecoveryChallengeRequest">
            <summary>
            This class represents the body of the resend recovery challenge request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ResendRecoveryChallengeRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.ResetPasswordRequest">
            <summary>
            This class represents the body of the resend password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ResetPasswordRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.ResetPasswordRequest.NewPassword">
            <summary>
            Gets or sets the new password
            </summary>
            <value>The new password</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.TransactionStateRequest">
            <summary>
            This class represents the body of the transaction state request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.TransactionStateRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.UnlockAccountRequest">
            <summary>
            This class represents the body of the unlock account request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.UnlockAccountRequest.Username">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.UnlockAccountRequest.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.UnlockAccountRequest.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyCallFactorRequest">
            <summary>
            This class represents the body of the verify call factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyCallFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyCallFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyCallFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyDuoFactorRequest">
            <summary>
            This class represents the body of the verify duo factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyDuoFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyPushFactorRequest">
            <summary>
            This class represents the body of the verify push factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyPushFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyPushFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyPushFactorRequest.AutoPush">
            <summary>
            Gets or sets the auto push flag
            </summary>
            <value>The auto push flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyRecoveryFactorRequest">
            <summary>
            This class represents the body of the verify recovery factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyRecoveryFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyRecoveryFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyRecoveryTokenRequest">
            <summary>
            This class represents the body of the verify recovery token request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyRecoveryTokenRequest.RecoveryToken">
            <summary>
            Gets or sets the recovery token
            </summary>
            <value>The recovery token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifySecurityQuestionFactorRequest">
            <summary>
            This class represents the body of the verify security question factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySecurityQuestionFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySecurityQuestionFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySecurityQuestionFactorRequest.Answer">
            <summary>
            Gets or sets the answer
            </summary>
            <value>The answer</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifySmsFactorRequest">
            <summary>
            This class represents the body of the verify SMS factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySmsFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySmsFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifySmsFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyTotpFactorRequest">
            <summary>
            This class represents the body of the verify TOTP factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyTotpFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyTotpFactorRequest.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyTotpFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyU2fFactorRequest">
            <summary>
            This class represents the body of the verify U2F factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyU2fFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyU2fFactorRequest.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyU2fFactorRequest.SignatureData">
            <summary>
            Gets or sets the signature data
            </summary>
            <value>The signature data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyU2fFactorRequest.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Models.VerifyWebAuthnFactorRequest">
            <summary>
            This class represents the body of the verify WebAuthn factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.Models.VerifyWebAuthnFactorRequest.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.OktaDefaults">
            <summary>
            This class contains Okta defaults
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.OktaProvider">
            <summary>
            Okta
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.RsaProvider">
            <summary>
            RSA
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.GoogleProvider">
            <summary>
            Google
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.YubiKeyProvider">
            <summary>
            Yubico
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.DuoProvider">
            <summary>
            Duo
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.FidoProvider">
            <summary>
            FIDO
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.OktaDefaults.SymantecProvider">
            <summary>
            Symantec
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.RecoveryType">
            <summary>
            This class represents the possible recovery types
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.RecoveryType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.RecoveryType"/> class.
            </summary>
            <param name="value">The recovery type value</param>
        </member>
        <member name="F:Okta.Auth.Sdk.RecoveryType.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Okta.Auth.Sdk.RecoveryType.Unlock">
            <summary>
            Unlock
            </summary>
        </member>
        <member name="T:Okta.Auth.Sdk.ResendChallengeOptions">
            <summary>
            This class contains all the request parameters for performing a resend challenge request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ResendChallengeOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ResendChallengeOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="T:Okta.Auth.Sdk.ResendRecoveryChallengeOptions">
            <summary>
            This class contains all the request parameters for performing a resend recovery challenge request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ResendRecoveryChallengeOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ResendRecoveryChallengeOptions.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="T:Okta.Auth.Sdk.ResetPasswordOptions">
            <summary>
            This class contains all the request parameters for performing a reset password request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.ResetPasswordOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.ResetPasswordOptions.NewPassword">
            <summary>
            Gets or sets the new password
            </summary>
            <value>The new password</value>
        </member>
        <member name="T:Okta.Auth.Sdk.Resource">
            <summary>
            This class represents a resource
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.Resource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Okta.Auth.Sdk.Resource"/> class.
            </summary>
        </member>
        <member name="M:Okta.Auth.Sdk.Resource.GetClient">
            <summary>
            Gets the <see cref="T:Okta.Sdk.Abstractions.IOktaClient">OktaClient</see> that created this resource.
            </summary>
            <returns>The <see cref="T:Okta.Sdk.Abstractions.IOktaClient">OktaClient</see> that created this resource.</returns>
        </member>
        <member name="T:Okta.Auth.Sdk.TransactionStateOptions">
            <summary>
            This class contains all the request parameters for performing a transaction state request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.TransactionStateOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.UnlockAccountOptions">
            <summary>
            This class contains all the request parameters for performing an unlock account request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.UnlockAccountOptions.Username">
            <summary>
            Gets or sets the username
            </summary>
            <value>The username</value>
        </member>
        <member name="P:Okta.Auth.Sdk.UnlockAccountOptions.RelayState">
            <summary>
            Gets or sets the relay state
            </summary>
            <value>The relay state</value>
        </member>
        <member name="P:Okta.Auth.Sdk.UnlockAccountOptions.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="P:Okta.Auth.Sdk.UnlockAccountOptions.XForwardedFor">
            <summary>
            Gets or sets the value for `x-forwarded-for` header.
            </summary>
            <value>The value for `x-forwarded-for` header.</value>
        </member>
        <member name="P:Okta.Auth.Sdk.UnlockAccountOptions.UserAgent">
            <summary>
            Gets or sets the user agent.
            </summary>
            <value>The user agent.</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyCallFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify call factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyCallFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyCallFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyCallFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyCallFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyDuoFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify duo factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyDuoFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyDuoFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyPushFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify push factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyPushFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyPushFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyPushFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyPushFactorOptions.AutoPush">
            <summary>
            Gets or sets the auto push flag
            </summary>
            <value>The auto push flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyRecoveryFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify recovery factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyRecoveryFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyRecoveryFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyRecoveryFactorOptions.FactorType">
            <summary>
            Gets or sets the factor type
            </summary>
            <value>The factor type</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyRecoveryTokenOptions">
            <summary>
            This class contains all the request parameters for performing a verify recovery token request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyRecoveryTokenOptions.RecoveryToken">
            <summary>
            Gets or sets the recovery token
            </summary>
            <value>The recovery token</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify security question factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions.Answer">
            <summary>
            Gets or sets the answer
            </summary>
            <value>The answer</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySecurityQuestionFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifySmsFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify SMS factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySmsFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySmsFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySmsFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifySmsFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyTotpFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify TOTP factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyTotpFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyTotpFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyTotpFactorOptions.PassCode">
            <summary>
            Gets or sets the pass code
            </summary>
            <value>The pass code</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyTotpFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyU2FFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify U2F factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyU2FFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyU2FFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyU2FFactorOptions.ClientData">
            <summary>
            Gets or sets the client data
            </summary>
            <value>The client data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyU2FFactorOptions.SignatureData">
            <summary>
            Gets or sets the signature data
            </summary>
            <value>The signature data</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyU2FFactorOptions.RememberDevice">
            <summary>
            Gets or sets the remember device flag
            </summary>
            <value>The remember device flag</value>
        </member>
        <member name="T:Okta.Auth.Sdk.VerifyWebAuthnFactorOptions">
            <summary>
            This class contains all the request parameters for performing a verify WebAuthn factor request
            </summary>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyWebAuthnFactorOptions.FactorId">
            <summary>
            Gets or sets the factor id
            </summary>
            <value>The factor id</value>
        </member>
        <member name="P:Okta.Auth.Sdk.VerifyWebAuthnFactorOptions.StateToken">
            <summary>
            Gets or sets the state token
            </summary>
            <value>The state token</value>
        </member>
    </members>
</doc>
